trilean : CONTEXT = BEGIN
  TRILEAN: TYPE = {True, False, Invalid};

  maybe_and : [[TRILEAN, TRILEAN] -> TRILEAN] =
  LAMBDA(x1 : TRILEAN, x2: TRILEAN):
    IF x1 = Invalid OR x2 = Invalid THEN
      Invalid
    ELSIF x1 = True AND x2 = True THEN
      True
    ELSE
      False
    ENDIF;

  maybe_or : [[TRILEAN, TRILEAN] -> TRILEAN] =
  LAMBDA(x1 : TRILEAN, x2: TRILEAN):
    IF x1 = Invalid OR x2 = Invalid THEN
      Invalid
    ELSIF x1 = True OR x2 = True THEN
      True
    ELSE
      False
    ENDIF;

  maybe_not: [TRILEAN -> TRILEAN] =
  LAMBDA(x : TRILEAN):
    IF x = True THEN
      False
    ELSIF x = False THEN
      True
    ELSE
      Invalid
    ENDIF;

  maybe_nor: [[BOOLEAN, BOOLEAN] -> BOOLEAN] = LAMBDA(x1 : BOOLEAN, x2: BOOLEAN):
NOT(x1 OR x2);

  gval : [TRILEAN -> BOOLEAN] = LAMBDA(g : TRILEAN) : g = True;

END
